@model InvoiceMaker.FormModels.EditWorkDone

<h1>Edit A Work Order</h1>

@using (Html.BeginForm("Edit", "WorkDone", new { Id = Model.Id }, FormMethod.Post, new { @class = "pure-form pure-form-stacked" }))
{
    @Html.AntiForgeryToken()

    <fieldset>
        <div class="pure-controls">
            @Html.LabelFor(m => m.ClientId)
            @Html.DropDownListFor(m => m.ClientId, Model.ClientSelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "pure-form-message-inline" })
        </div>

        <div class="pure-controls">
            @Html.LabelFor(m => m.WorkTypeId)
            @Html.DropDownListFor(m => m.WorkTypeId, Model.WorkTypeSelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.WorkTypeId, "", new { @class = "pure-form-message-inline" })
        </div>

        <div class="pure-controls">
            @Html.LabelFor(model => model.StartedOn)
            @Html.EditorFor(model => model.StartedOn, new { @Value = Model.StartedOn.ToString("dd/mm/yyyy") })
            @Html.ValidationMessageFor(model => model.StartedOn, "", new { @class = "pure-form-message-inline" })
        </div>

        <div class="pure-controls">
            @Html.LabelFor(model => model.EndedOn)
            @Html.EditorFor(model => model.EndedOn)
            @Html.ValidationMessageFor(model => model.EndedOn, "", new { @class = "pure-form-message-inline" })
        </div>

        <div class="pure-controls">
            @Html.ActionLink("Cancel", "Index", new { }, new { @class = "button-error pure-button" })
            <button type="submit" class="button-success pure-button">Submit</button>
        </div>
    </fieldset>
}
